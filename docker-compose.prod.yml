version: '3.3'
services:
  application:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    volumes:
      - './:/var/html/portal'
      - 'vendor:/var/html/portal/vendor'
      - 'node_modules:/var/html/portal/node_modules'
    networks:
     - portal
    depends_on:
     - mysql

  mysql:
    image: 'mysql/mysql-server:8.0'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - '${DB_PATH}:/var/lib/mysql'
    networks:
      - portal
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - './:/var/html/portal'
      - './docker/default.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - 80:80
      - 443:443
    networks:
      - portal
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      retries: 3
      timeout: 10s
    depends_on:
     - mysql
     - application

networks:
  portal:
    driver: bridge

volumes:
  vendor:
  node_modules:
